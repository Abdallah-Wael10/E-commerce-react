{"ast":null,"code":"// import './check.css';\n\n// import Nav from '../Nav bar/Nav';\n// import Footer from '../footer section/footer';\n// import { Link } from 'react-router-dom';\n// import Carditem from '../card item/carditem';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n\n// function Check() {\n//   const [myCarts , setMyCart] =useState(JSON.parse(localStorage.getItem(\"cart\")) || [] )\n\n// //  const deleteCard =(id)=>{\n// //   const updatedCarts = myCarts.filter(i => i.id !== id)\n// //   setMyCart(updatedCarts)\n// //  }\n\n// // useEffect(()=>{\n// //   localStorage.setItem(\"cart\" ,JSON.stringify(myCarts))\n// // }, [myCarts])\n\n//   // Function to delete a cart item by id\n//   const deleteCard = (id) => {\n//     const updatedCarts = myCarts.filter(i => i.id !== id);\n//     setMyCart(updatedCarts);\n//   };\n\n//   useEffect(() => {\n//     // Update localStorage whenever cart data changes\n//     localStorage.setItem(\"cart\", JSON.stringify(myCarts));\n//   }, [myCarts]);\n\n//   const [value ,setValue] = useState(1)\n// const [price2 ,setprice2] =useState()\n\n//     const plusbtn =(p)=>{\n//     setValue(value + 1)\n//       setprice2(p * value)\n\n//   }\n//   const minsbtn =()=>{\n//     setValue(value - 1)\n\n//     if (value === 0) {\n//       setValue(0)\n\n//     }\n\n//   }\n// // const plusbtn =(price)=>{\n\n// //   const newPrice =myCarts.filter(p => p.price == price)\n\n// //   price2 = p.price * \n\n// // }\n\n//   // // Function to handle quantity change\n//   // const updateQuantity = (id, change) => {\n//   //   setMyCart(prevItems =>\n//   //     prevItems.map(item =>\n//   //       item.id === id\n//   //         ? {\n//   //             ...item,\n//   //             quantity: Math.max((item.quantity || 1) + change, 1),\n//   //             price: ((item.price || 0) + (change > 0 ? 2 : 0)) * ((item.quantity || 1) + change)\n//   //           }\n//   //         : item\n//   //     )\n//   //   );\n//   // };\n\n//   return (\n//     <div className=\"checkk\">\n//   <div className=\"checkksection\">\n//     <header>\n//       <Link to=\"/market\"><button>-Continue Shopping </button></Link>\n//       <hr />\n\n//       <div className=\"boxe\">\n//       {myCarts.map(e => (\n//               <Carditem\n//                 key={e.id}\n//                 src={e.image}\n//                 cat={e.category}\n//                 title={e.title}\n//                 price={e.price}\n//                 pricetwo={price2}\n//                 deletCardd={() => deleteCard(e.id)}\n//                 pbtn={() => plusbtn(e.price)}\n//                 mbtn={() => minsbtn(e.price)}\n//                 QUANTITY={value}\n//               />\n//             ))}\n//       </div>\n\n//     </header>\n\n//   </div>\n\n//         <Footer/>\n//     </div>\n//   );\n// }\n\n// export default Check;\n\n// import './check.css';\n// import Nav from '../Nav bar/Nav';\n// import Footer from '../footer section/footer';\n// import { Link } from 'react-router-dom';\n// import Carditem from '../card item/carditem';\n// import { useState, useEffect } from 'react';\n\n// function Check() {\n//   const [myCarts, setMyCart] = useState(JSON.parse(localStorage.getItem(\"cart\")) || []);\n\n//   // Update localStorage whenever cart data changes\n//   useEffect(() => {\n//     localStorage.setItem(\"cart\", JSON.stringify(myCarts));\n//   }, [myCarts]);\n\n//   const updateQuantity = (id, change) => {\n//     setMyCart(prevItems =>\n//       prevItems.map(item =>\n//         item.id === id\n//           ? {\n//               ...item,\n//               quantity: Math.max((item.quantity || 1) + change, 1),\n//               totalPrice: (item.price * (Math.max((item.quantity || 1) + change, 1)))\n//             }\n//           : item\n//       )\n//     );\n//   };\n\n//   const deleteCard = (id) => {\n//     const updatedCarts = myCarts.filter(i => i.id !== id);\n//     setMyCart(updatedCarts);\n//   };\n\n//   return (\n//     <div className=\"checkk\">\n//       <div className=\"checkksection\">\n//         <header>\n//           <Link to=\"/market\"><button>-Continue Shopping </button></Link>\n//           <hr />\n//           <div className=\"boxe\">\n//             {myCarts.map(e => (\n//               <Carditem\n//                 key={e.id}\n//                 src={e.image}\n//                 cat={e.category}\n//                 title={e.title}\n//                 price={e.totalPrice}\n//                 deletCardd={() => deleteCard(e.id)}\n//                 pbtn={() => updateQuantity(e.id, 1)}\n//                 mbtn={() => updateQuantity(e.id, -1)}\n//                 QUANTITY={e.quantity || 1}\n//               />\n//             ))}\n//           </div>\n//         </header>\n//       </div>\n//       <Footer/>\n//     </div>\n//   );\n// }\n\n// export default Check;","map":{"version":3,"names":[],"sources":["/Users/yusef/Desktop/project/E-commerce/my-app/src/checkout/check.jsx"],"sourcesContent":["// import './check.css';\n\n// import Nav from '../Nav bar/Nav';\n// import Footer from '../footer section/footer';\n// import { Link } from 'react-router-dom';\n// import Carditem from '../card item/carditem';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n\n\n\n// function Check() {\n//   const [myCarts , setMyCart] =useState(JSON.parse(localStorage.getItem(\"cart\")) || [] )\n\n// //  const deleteCard =(id)=>{\n// //   const updatedCarts = myCarts.filter(i => i.id !== id)\n// //   setMyCart(updatedCarts)\n// //  }\n\n\n// // useEffect(()=>{\n// //   localStorage.setItem(\"cart\" ,JSON.stringify(myCarts))\n// // }, [myCarts])\n  \n//   // Function to delete a cart item by id\n//   const deleteCard = (id) => {\n//     const updatedCarts = myCarts.filter(i => i.id !== id);\n//     setMyCart(updatedCarts);\n//   };\n\n//   useEffect(() => {\n//     // Update localStorage whenever cart data changes\n//     localStorage.setItem(\"cart\", JSON.stringify(myCarts));\n//   }, [myCarts]);\n\n//   const [value ,setValue] = useState(1)\n// const [price2 ,setprice2] =useState()\n\n//     const plusbtn =(p)=>{\n//     setValue(value + 1)\n//       setprice2(p * value)\n        \n\n//   }\n//   const minsbtn =()=>{\n//     setValue(value - 1)\n\n//     if (value === 0) {\n//       setValue(0)\n      \n//     }\n    \n//   }\n// // const plusbtn =(price)=>{\n\n// //   const newPrice =myCarts.filter(p => p.price == price)\n\n// //   price2 = p.price * \n\n  \n\n\n// // }\n\n\n\n  \n\n//   // // Function to handle quantity change\n//   // const updateQuantity = (id, change) => {\n//   //   setMyCart(prevItems =>\n//   //     prevItems.map(item =>\n//   //       item.id === id\n//   //         ? {\n//   //             ...item,\n//   //             quantity: Math.max((item.quantity || 1) + change, 1),\n//   //             price: ((item.price || 0) + (change > 0 ? 2 : 0)) * ((item.quantity || 1) + change)\n//   //           }\n//   //         : item\n//   //     )\n//   //   );\n//   // };\n\n\n\n//   return (\n//     <div className=\"checkk\">\n//   <div className=\"checkksection\">\n//     <header>\n//       <Link to=\"/market\"><button>-Continue Shopping </button></Link>\n//       <hr />\n\n//       <div className=\"boxe\">\n//       {myCarts.map(e => (\n//               <Carditem\n//                 key={e.id}\n//                 src={e.image}\n//                 cat={e.category}\n//                 title={e.title}\n//                 price={e.price}\n//                 pricetwo={price2}\n//                 deletCardd={() => deleteCard(e.id)}\n//                 pbtn={() => plusbtn(e.price)}\n//                 mbtn={() => minsbtn(e.price)}\n//                 QUANTITY={value}\n//               />\n//             ))}\n//       </div>\n\n//     </header>\n\n//   </div>\n\n//         <Footer/>\n//     </div>\n//   );\n// }\n\n// export default Check;\n\n\n\n\n\n// import './check.css';\n// import Nav from '../Nav bar/Nav';\n// import Footer from '../footer section/footer';\n// import { Link } from 'react-router-dom';\n// import Carditem from '../card item/carditem';\n// import { useState, useEffect } from 'react';\n\n// function Check() {\n//   const [myCarts, setMyCart] = useState(JSON.parse(localStorage.getItem(\"cart\")) || []);\n\n//   // Update localStorage whenever cart data changes\n//   useEffect(() => {\n//     localStorage.setItem(\"cart\", JSON.stringify(myCarts));\n//   }, [myCarts]);\n\n//   const updateQuantity = (id, change) => {\n//     setMyCart(prevItems =>\n//       prevItems.map(item =>\n//         item.id === id\n//           ? {\n//               ...item,\n//               quantity: Math.max((item.quantity || 1) + change, 1),\n//               totalPrice: (item.price * (Math.max((item.quantity || 1) + change, 1)))\n//             }\n//           : item\n//       )\n//     );\n//   };\n\n//   const deleteCard = (id) => {\n//     const updatedCarts = myCarts.filter(i => i.id !== id);\n//     setMyCart(updatedCarts);\n//   };\n\n//   return (\n//     <div className=\"checkk\">\n//       <div className=\"checkksection\">\n//         <header>\n//           <Link to=\"/market\"><button>-Continue Shopping </button></Link>\n//           <hr />\n//           <div className=\"boxe\">\n//             {myCarts.map(e => (\n//               <Carditem\n//                 key={e.id}\n//                 src={e.image}\n//                 cat={e.category}\n//                 title={e.title}\n//                 price={e.totalPrice}\n//                 deletCardd={() => deleteCard(e.id)}\n//                 pbtn={() => updateQuantity(e.id, 1)}\n//                 mbtn={() => updateQuantity(e.id, -1)}\n//                 QUANTITY={e.quantity || 1}\n//               />\n//             ))}\n//           </div>\n//         </header>\n//       </div>\n//       <Footer/>\n//     </div>\n//   );\n// }\n\n// export default Check;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAKA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}